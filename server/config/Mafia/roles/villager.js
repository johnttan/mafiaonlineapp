// Generated by CoffeeScript 1.6.3
(function() {
  var DefaultRole, VillagerRole, log, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  log = function() {
    var thelog, _i, _len, _results;
    _results = [];
    for (_i = 0, _len = arguments.length; _i < _len; _i++) {
      thelog = arguments[_i];
      _results.push(console.log(thelog));
    }
    return _results;
  };

  DefaultRole = require('./default').DefaultRole;

  VillagerRole = (function(_super) {
    __extends(VillagerRole, _super);

    function VillagerRole() {
      _ref = VillagerRole.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    VillagerRole.prototype.roleID = 'villager';

    VillagerRole.prototype.allegiance = 'village';

    VillagerRole.prototype.winCondition = {
      role: 'villager',
      check: function(gameState) {
        var all, numMafia, numVillager, player, playerObj, _ref1;
        numMafia = 0;
        numVillager = 0;
        _ref1 = gameState.players;
        for (player in _ref1) {
          if (!__hasProp.call(_ref1, player)) continue;
          playerObj = _ref1[player];
          all = playerObj.getCurrentState().allegiance;
          if (all === 'mafia') {
            numMafia += 1;
          } else if (all === 'village') {
            numVillager += 1;
          }
        }
        if (numMafia === 0 && numVillager > 0) {
          return true;
        } else {
          return false;
        }
      }
    };

    return VillagerRole;

  })(DefaultRole);

  exports.villager = new VillagerRole();

}).call(this);

/*
//@ sourceMappingURL=villager.map
*/
