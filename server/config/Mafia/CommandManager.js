// Generated by CoffeeScript 1.6.3
(function() {
  var CommandManager, Heap;

  Heap = require('heap');

  CommandManager = (function() {
    function CommandManager(gameEngine) {
      this.gameEngine = gameEngine;
      this.activeQueue = new Heap(function(a, b) {
        if (a.priority < b.priority) {
          return 1;
        } else {
          return -1;
        }
      });
    }

    CommandManager.prototype.preValidateActive = function(active, args, player) {
      var immediate, result, valid;
      result = this.gameEngine.getPlayerObject(player).on(active, args);
      valid = result[0];
      immediate = result[1];
      if (valid) {
        if (immediate) {
          return this.callActives();
        }
      }
    };

    CommandManager.prototype.addActive = function(priority, boundActive, currentState, boundValidate) {
      var queueObject;
      queueObject = {
        priority: priority,
        active: boundActive,
        currentState: currentState,
        validate: boundValidate
      };
      return this.activeQueue.push(queueObject);
    };

    CommandManager.prototype.callActives = function() {
      var activeObject, _results;
      _results = [];
      while (this.activeQueue.size() > 0) {
        activeObject = this.activeQueue.pop();
        if (activeObject.validate()) {
          _results.push(activeObject.active());
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    return CommandManager;

  })();

  exports.CommandManager = CommandManager;

}).call(this);

/*
//@ sourceMappingURL=CommandManager.map
*/
