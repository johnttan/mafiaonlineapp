// Generated by CoffeeScript 1.6.3
(function() {
  var CommandManager, GameEngine, MessageManager, PlayerGame, PublicStateManager, roles,
    __hasProp = {}.hasOwnProperty;

  roles = require('./roles');

  PlayerGame = require('./PlayerGame').PlayerGame;

  CommandManager = require('./CommandManager').CommandManager;

  PublicStateManager = require('./PublicStateManager').PublicStateManager;

  MessageManager = require('./MessageManager').MessageManager;

  GameEngine = (function() {
    function GameEngine(io, ioNamespace, Config) {
      this.config = new Config();
      this.gameState = {};
      this.config.defaultGameState(this.gameState);
      this.playersObject = {};
      this.manager = new CommandManager(this);
      this.publicStateManager = new PublicStateManager();
      this.messageManager = new MessageManager(io, ioNamespace, this);
    }

    GameEngine.prototype.nextTurn = function() {
      var player, playerObject, _ref;
      this.gameState.turn += 1;
      _ref = this.gameState.players;
      for (player in _ref) {
        if (!__hasProp.call(_ref, player)) continue;
        playerObject = _ref[player];
        playerObject.endTurn(this.gameState.turn);
      }
      this.publicStateManager.nextTurn(this.gameState.turn);
      return this.messageManager.nextTurn();
    };

    GameEngine.prototype.addPlayer = function(playerInfo) {
      this.playersObject[playerInfo.name] = playerInfo;
      this.gameState.players[playerInfo.name] = new PlayerGame(roles[playerInfo.role], playerInfo, this, this.config);
      this.publicStateManager.addPlayer(this.gameState.players[playerInfo.name], this, this.config);
      return this.messageManager.addPlayer();
    };

    GameEngine.prototype.deletePlayer = function(playerName) {
      delete this.playersObject[playerName];
      delete this.gameState.players[playerName];
      this.publicStateManager.removePlayer(playerName);
      return this.messageManager.removePlayer(playerName);
    };

    GameEngine.prototype.getChatManager = function() {};

    GameEngine.prototype.getCommandManager = function() {
      return this.manager;
    };

    GameEngine.prototype.getAllPublicState = function() {
      return this.publicStateManager.getAllPublicState();
    };

    GameEngine.prototype.getPublicState = function(player) {
      return this.publicStateManager.getPublicState(player);
    };

    GameEngine.prototype.getGameState = function() {
      return this.gameState;
    };

    GameEngine.prototype.getAllPlayers = function() {
      return this.playersObject;
    };

    GameEngine.prototype.getPlayerInfo = function(player) {
      return this.playersObject[player];
    };

    GameEngine.prototype.getPlayerObject = function(player) {
      return this.gameState.players[player];
    };

    GameEngine.prototype.getTurn = function() {
      return this.gameState.turn;
    };

    return GameEngine;

  })();

  exports.GameEngine = GameEngine;

}).call(this);

/*
//@ sourceMappingURL=GameEngine.map
*/
